// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'java'

targetCompatibility = 1.7
sourceCompatibility = 1.7

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
        maven {
//            name "jitpack"
            url "https://jitpack.io"
        }
    }
}

dependencies {
    compile 'log4j:log4j:1.2.17'
}

task printLGDont(type: JavaExec) {
    dependsOn classes
    doFirst{
        println(" ****** Print linkedgeodata ontology  ****** ")
    }
    main = "cc.openthings.sync.PrintTtlOntology"
    classpath = sourceSets.main.runtimeClasspath
    //args = []
    //systemProperty 'x', "y"
}

task analyseOnt(type: JavaExec) {
    dependsOn classes
    doFirst{
        println(" ****** analyse ontology  ****** ")
    }
    main = "cc.openthings.sync.OntAnalyser"
    classpath = sourceSets.main.runtimeClasspath
}

ext {
    jjsonVer = '1.1.0-alpha1'
    jenaVer = '3.1.1'
    jusVer = '0.7.0x2-SNAPSHOT'
    libs = [ // Groovy map literal
             jjson: [
                     'io.apptik.json:json-core:' + jjsonVer,
                     //'io.apptik.json:json-generator:' + jjsonVer,
                     'io.apptik.json:json-wrapper:' + jjsonVer
             ],
            jena: [
                    'org.apache.jena:apache-jena-libs:'+jenaVer,
                    'org.apache.jena:jena:'+jenaVer,
                    'org.apache.jena:jena-core:'+jenaVer,
                    'org.apache.jena:jena-arq:'+jenaVer
            ],
            jenatdb: 'org.apache.jena:jena-tdb:' +jenaVer,
            jus: [
                    'io.apptik.comm:jus-java:'+jusVer,
                    'io.apptik.comm:rx-jus:'+jusVer,
                    'io.apptik.comm:jus-jjson:'+jusVer,
                    'io.apptik.comm:retro-jus:'+jusVer
            ]
    ]

}

